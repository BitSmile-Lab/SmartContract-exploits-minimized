// SPDX-License-Identifier: MIT
pragma solidity 0.8.20;

import {Test, console2} from "forge-std/Test.sol";
import {MappingStorage} from  "../../src/mapping-storage/MappingStorage.sol";

contract MappingStorageTest is Test{

    MappingStorage public ms;
    function setUp() public {
        ms = new MappingStorage();
    }

    function testMappingKeyValue() public{
        //mapping decliar slot have no effect没影响
        ms.test_sstore(0, bytes32(uint256(112233)));
        checkInitValue();
    }

    function checkInitValue() internal{
        bytes32 slot_key1 = ms.getMappingElementSlotIndex(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4);
        bytes32 value1 = ms.test_sload(slot_key1);
        assertEq(uint256(value1), 123);

        bytes32 slot_key2 = ms.getMappingElementSlotIndex(0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2);
        bytes32 value2 = ms.test_sload(slot_key2);
        assertEq(uint256(value2), 456);

        bytes32 slot_key3 = ms.getMappingElementSlotIndex(0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db);
        bytes32 value3 = ms.test_sload(slot_key3);
        assertEq(uint256(value3), 789);

        assertEq(uint256(ms.test_sload(0)), 112233);
    }

}