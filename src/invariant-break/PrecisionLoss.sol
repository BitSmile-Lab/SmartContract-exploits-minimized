// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract PrecisionLoss {
    function ussdOriginalAmountToBuy(uint ussdAmount, uint daiAmount) 
        public pure returns (uint) {
        // @audit /2 * 1e12 division before multiplication
        // causes precision loss
        return (ussdAmount - daiAmount / 1e12)/2 * 1e12;
    }

    function ussdSimplifiedAmountToBuy(uint ussdAmount, uint daiAmount) 
        public pure returns (uint) {        
        // @audit /2 * 1e12 can be rewritten as * 1e12 / 2,
        // removes division before multiplication, solving precision 
        // loss
        return (ussdAmount - daiAmount / 1e12) * 1e12 / 2;
    }
}
