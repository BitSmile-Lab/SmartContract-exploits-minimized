// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

// contract address: 0x2eD8B9aAAba437253fC3B2D9fDf04fac99dDc208

contract MappingStorage {
    mapping(address => uint256) public addressToBalance;
    uint8 public constant mappingSlotIndex = 0;

    constructor() {
        addressToBalance[0x5B38Da6a701c568545dCfcB03FcB875f56beddC4] = 123;
        addressToBalance[0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2] = 456;
        addressToBalance[0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db] = 789;
    }

    function getMappingElementSlotIndex(address _key) public pure returns (bytes32) {
        return keccak256(abi.encode(_key, mappingSlotIndex));
    }

    function test_sstore(bytes32 slot, bytes32 value ) public {
        assembly {
            sstore(slot, value)
        }
    }

     function test_sload(bytes32 slot)
        public
        view
        returns (bytes32 value)
    {
        assembly {
            value := sload(slot)
            
        }

    }
}